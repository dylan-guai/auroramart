# Generated by Django 5.2.7 on 2025-10-19 05:29

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('checkout', '0004_alter_customernotification_notification_type'),
        ('item', '0002_remove_product_is_in_stock_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LoyaltyTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('bronze', 'Bronze'), ('silver', 'Silver'), ('gold', 'Gold'), ('platinum', 'Platinum'), ('diamond', 'Diamond')], max_length=20, unique=True)),
                ('display_name', models.CharField(max_length=50)),
                ('min_points', models.PositiveIntegerField()),
                ('max_points', models.PositiveIntegerField(blank=True, null=True)),
                ('point_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=3)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('free_shipping', models.BooleanField(default=False)),
                ('priority_support', models.BooleanField(default=False)),
                ('exclusive_access', models.BooleanField(default=False)),
                ('color', models.CharField(default='#CD7F32', max_length=7)),
                ('icon', models.CharField(default='medal', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Loyalty Tier',
                'verbose_name_plural': 'Loyalty Tiers',
                'ordering': ['min_points'],
            },
        ),
        migrations.CreateModel(
            name='LoyaltyAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_balance', models.PositiveIntegerField(default=0)),
                ('lifetime_points', models.PositiveIntegerField(default=0)),
                ('join_date', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='loyalty_account', to=settings.AUTH_USER_MODEL)),
                ('current_tier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='loyalty.loyaltytier')),
            ],
            options={
                'verbose_name': 'Loyalty Account',
                'verbose_name_plural': 'Loyalty Accounts',
            },
        ),
        migrations.CreateModel(
            name='LoyaltyAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_accounts', models.PositiveIntegerField(default=0)),
                ('active_accounts', models.PositiveIntegerField(default=0)),
                ('total_points_earned', models.PositiveIntegerField(default=0)),
                ('total_points_redeemed', models.PositiveIntegerField(default=0)),
                ('total_redemptions', models.PositiveIntegerField(default=0)),
                ('tier_distribution', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Loyalty Analytics',
                'verbose_name_plural': 'Loyalty Analytics',
                'ordering': ['-date'],
                'unique_together': {('date',)},
            },
        ),
        migrations.CreateModel(
            name='LoyaltyNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('tier_upgrade', 'Tier Upgrade'), ('points_earned', 'Points Earned'), ('points_expiring', 'Points Expiring'), ('reward_available', 'Reward Available'), ('reward_redeemed', 'Reward Redeemed'), ('promotion', 'Promotion')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='loyalty.loyaltyaccount')),
            ],
            options={
                'verbose_name': 'Loyalty Notification',
                'verbose_name_plural': 'Loyalty Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LoyaltyReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('reward_type', models.CharField(choices=[('discount', 'Discount'), ('free_shipping', 'Free Shipping'), ('free_product', 'Free Product'), ('points_bonus', 'Points Bonus'), ('exclusive_access', 'Exclusive Access')], max_length=20)),
                ('points_cost', models.PositiveIntegerField()),
                ('discount_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('max_redemptions', models.PositiveIntegerField(blank=True, null=True)),
                ('current_redemptions', models.PositiveIntegerField(default=0)),
                ('valid_from', models.DateTimeField()),
                ('valid_until', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('free_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='item.product')),
            ],
            options={
                'verbose_name': 'Loyalty Reward',
                'verbose_name_plural': 'Loyalty Rewards',
                'ordering': ['points_cost'],
            },
        ),
        migrations.CreateModel(
            name='LoyaltyRedemption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('points_used', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('used', 'Used'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('redeemed_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redemptions', to='loyalty.loyaltyaccount')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='checkout.order')),
                ('reward', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='loyalty.loyaltyreward')),
            ],
            options={
                'verbose_name': 'Loyalty Redemption',
                'verbose_name_plural': 'Loyalty Redemptions',
                'ordering': ['-redeemed_at'],
            },
        ),
        migrations.CreateModel(
            name='LoyaltyTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('points', models.IntegerField()),
                ('transaction_type', models.CharField(choices=[('earned', 'Earned'), ('redeemed', 'Redeemed'), ('expired', 'Expired'), ('adjusted', 'Adjusted')], max_length=20)),
                ('source', models.CharField(choices=[('purchase', 'Purchase'), ('review', 'Product Review'), ('referral', 'Referral'), ('birthday', 'Birthday Bonus'), ('promotion', 'Promotion'), ('redemption', 'Redemption'), ('admin', 'Admin Adjustment')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='loyalty.loyaltyaccount')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='checkout.order')),
            ],
            options={
                'verbose_name': 'Loyalty Transaction',
                'verbose_name_plural': 'Loyalty Transactions',
                'ordering': ['-created_at'],
            },
        ),
    ]
